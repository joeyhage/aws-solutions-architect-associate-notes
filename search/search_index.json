{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AWS Certified Solutions Architect Associate (SAA-C02) Notes","text":"<ul> <li>This repo contains study notes for the AWS Solutions Architect Associate (SAA-C02) exam.</li> <li>Contributions of any kind are welcome!</li> </ul>"},{"location":"#symbols","title":"Symbols","text":"<ul> <li> <p>There are some symbols used throughout the documentation:</p> Symbol Description \ud83d\udca1 Best practice or practical tips \u2757 An important limitation, challenge or an exception \ud83d\udcdd Common exam area </li> </ul>"},{"location":"#content","title":"Content","text":"<ol> <li>Design Resilient Architecture<ol> <li>Design a multi-tier architecture solution</li> <li>Design highly available and/or fault-tolerant architectures</li> <li>Design decoupling mechanisms using AWS services</li> <li>Choose appropriate resilient storage</li> </ol> </li> <li>Design High-Performing Architectures<ol> <li>Identify elastic and scalable compute solutions for a workload</li> <li>Select high-performing and scalable storage solutions for a workload</li> <li>Select high-performing networking solutions for a workload</li> <li>Choose high-performing database solutions for a workload</li> </ol> </li> <li>Design Secure Applications and Architectures<ol> <li>Design secure access to AWS resources</li> <li>Design secure application tiers</li> <li>Select appropriate data security options</li> </ol> </li> <li>Design Cost-Optimized Architectures<ol> <li>Identify cost-effective storage solutions</li> <li>Identify cost-effective compute and database services</li> <li>Design cost-optimized network architectures</li> </ol> </li> </ol>"},{"location":"#cantrill-course","title":"Cantrill Course","text":"<p>Cantrill Notes</p>"},{"location":"#resources","title":"Resources","text":"<p>https://aws.amazon.com/certification/certified-solutions-architect-associate/</p> <p>Exam Guide</p> <p>Sample Questions</p> <p>\u2191</p>"},{"location":"01-Design-Resilient-Architecture/01-Multi-tier-architecture/","title":"Design a multi-tier architecture solution","text":""},{"location":"01-Design-Resilient-Architecture/02-Highly-available-fault-tolerant/","title":"Design highly available and/or fault-tolerant architectures","text":""},{"location":"01-Design-Resilient-Architecture/03-Decoupling-mechanisms/","title":"Design decoupling mechanisms using AWS services","text":""},{"location":"01-Design-Resilient-Architecture/04-Resilient-storage/","title":"Choose appropriate resilient storage","text":""},{"location":"02-Design-High-Performing-Architectures/01-Elastic-scalable-solutions/","title":"Identify elastic and scalable compute solutions for a workload","text":""},{"location":"02-Design-High-Performing-Architectures/02-High-performing-scalable-storage-solutions/","title":"Select high-performing and scalable storage solutions for a workload","text":""},{"location":"02-Design-High-Performing-Architectures/03-High-performing-networking-solutions/","title":"Select high-performing networking solutions for a workload","text":""},{"location":"02-Design-High-Performing-Architectures/04-High-performing-database-solutions/","title":"Choose high-performing database solutions for a workload","text":""},{"location":"03-Design-Secure-Applications-and-Architectures/01-Secure-access-to-resources/","title":"Design secure access to AWS resources","text":""},{"location":"03-Design-Secure-Applications-and-Architectures/02-Secure-application-tiers/","title":"Design secure application tiers","text":""},{"location":"03-Design-Secure-Applications-and-Architectures/03-Data-security-options/","title":"Select appropriate data security options","text":""},{"location":"04-Design-Cost-Optimized-Architectures/01-Cost-effective-storage/","title":"Identify cost-effective storage solutions","text":""},{"location":"04-Design-Cost-Optimized-Architectures/02-Cost-effective-compute-and-database/","title":"Identify cost-effective compute and database services","text":""},{"location":"04-Design-Cost-Optimized-Architectures/03-Cost-optimized-network-architectures/","title":"Design cost-optimized network architectures","text":""},{"location":"Cantrill/01-Course-Fundamentals-and-AWS-Accounts/","title":"Course Fundamentals and AWS Accounts","text":""},{"location":"Cantrill/01-Course-Fundamentals-and-AWS-Accounts/#aws-account-basics","title":"AWS Account Basics","text":"<ul> <li>Root user account is the only identity that has permissions by default</li> <li>Permissions need to be explicitly granted to IAM identities</li> <li>Create separate accounts for different environments (e.g. sit, uat, prod) and different teams<ul> <li>helps contain the impact of errors/exploits</li> <li>isolates identities and resources by default</li> </ul> </li> <li>there is more potential for misconfiguration the older accounts are</li> </ul>"},{"location":"Cantrill/01-Course-Fundamentals-and-AWS-Accounts/#identity-and-access-management-iam-basics","title":"Identity and Access Management (IAM) Basics","text":"<ul> <li>An AWS account and its root user are more or less the same thing</li> <li>Not possible to restrict access of root user</li> <li>\ud83d\udcdd Every account has its own copy of IAM (database) and IAM is always secure across all regions<ul> <li>full trust between an AWS account and its copy of IAM</li> </ul> </li> <li>IAM Policies: applied to users and/or groups and/or roles</li> <li>IAM has No cost</li> <li>IAM is an identity provider that authenticates and authorizes</li> <li>IAM cannot control external accounts/users</li> <li>can facilitate identity federation and MFA</li> </ul>"},{"location":"Cantrill/01-Course-Fundamentals-and-AWS-Accounts/#iam-types","title":"IAM types","text":"<ul> <li>users: humans or applications<ul> <li>can have IAM access keys</li> </ul> </li> <li>groups: collection of related users</li> <li>roles: used by AWS services or for granting external access<ul> <li>generally used when there is an uncertain number of things that will be assigned to the role</li> </ul> </li> </ul>"},{"location":"Cantrill/01-Course-Fundamentals-and-AWS-Accounts/#best-practices","title":"Best practices","text":"<ul> <li>root user is only used for account setup</li> <li>create IAM admin user with same permissions as root user so root user is no longer used</li> </ul>"},{"location":"Cantrill/01-Course-Fundamentals-and-AWS-Accounts/#iam-access-keys","title":"IAM Access Keys","text":"<ul> <li>IAM user has a username and at most one password<ul> <li>password is optional if the IAM user is for programmatic access via an access key</li> </ul> </li> <li>IAM user can have up to 2 access keys</li> <li>Access keys can be created, deleted, made active, or made inactive</li> <li>Secret access key can only be viewed once</li> <li>Access keys are a form of public key cryptography<ul> <li>Access keys are used to sign a request and AWS can verify the request using the public keys</li> </ul> </li> <li>Access keys are not automatically rotated</li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/","title":"Cloud Computing Fundamentals","text":""},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#what-is-cloud-computing","title":"What is cloud computing?","text":"<p>5 characteristics per NIST 800-145</p> <ol> <li>On-demand self-service<ol> <li>\ud83d\udcdd Can provision/terminate capabilities using UI/CLI as needed without requiring human interaction</li> </ol> </li> <li>Broad network access<ol> <li>\ud83d\udcdd Capabilities are available over the network, on any device, using standard protocols/mechanisms</li> </ol> </li> <li>Resource pooling<ol> <li>Sense of location independence - no control or knowledge over exact location of the resources</li> <li>Resources are pooled to serve multiple consumers using a multi-tenant model</li> <li>\ud83d\udcdd Economies of scale, cheaper service</li> </ol> </li> <li>Rapid elasticity<ol> <li>Capabilities (resources) can be elastically provisioned and released to scale rapidly outward and inward with demand</li> <li>To the consumer, capabilities available for provisioning appear to be unlimited</li> <li>In Cantrill's opinion, the most important characteristic of cloud computing</li> <li>\ud83d\udcdd Scale up/out and down/in automatically in response to system load</li> </ol> </li> <li>Measured service<ol> <li>Resource usage can be monitored, controlled, reported, and billed</li> <li>\ud83d\udcdd Usage is measured - pay for what you use</li> </ol> </li> </ol>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#public-vs-private-vs-hybrid-vs-multi-cloud","title":"Public vs private vs hybrid vs multi cloud","text":""},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#public-cloud","title":"Public cloud","text":"<ul> <li>\ud83d\udcdd Available to the general public and meet 5 characteristics of cloud computing</li> <li>examples: AWS, Azure, Google</li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#multi-cloud","title":"Multi-Cloud","text":"<ul> <li>\ud83d\udcdd Using multiple public cloud providers within a single system</li> <li>Can provide cloud provider resilience in case one fails</li> <li>Multi-Cloud environments are most effective when used for high availablity purposes<ul> <li>\ud83d\udca1 Cantrill says stay away from products/vendors that offer a single management window for multiple cloud platforms because it abstracts the unique features of each provider</li> </ul> </li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#private-cloud","title":"Private cloud","text":"<ul> <li>Private cloud needs to meet 5 characteristics of cloud computing<ul> <li>\ud83d\udcdd main difference between public cloud is that it is dedicated to the customer and is located on-premises</li> </ul> </li> <li>Examples: AWS Outposts, Azure Stack, Google Anthos</li> <li>Private cloud != on-premises infrastructure like VMWare</li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#hybrid-cloud","title":"Hybrid cloud","text":"<ul> <li>\ud83d\udcdd Using public cloud and private cloud together as a single environment</li> <li>Use same tooling, interfaces, processes to interact with public and private components</li> <li>\ud83d\udca1 Hybrid environment/networking is different!<ul> <li>Definition: using public cloud with on-premises infrastructure</li> </ul> </li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#cloud-service-models","title":"Cloud service models","text":""},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#terms","title":"Terms","text":"<ul> <li>Infrastructure stack: collection of things needed by an application<ul> <li>example stack from bottom to top: facilities, infrastructure, servers, virtualization, O/S, container, runtime, data, application</li> <li>parts consumer manages and parts the vendor manages</li> </ul> </li> <li>Unit of consumption: what you pay for and at what point you manage everything upwards</li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#on-premises-vs-dc-hosted","title":"On-premises vs DC hosted","text":"<ul> <li>On-premises: you own the entire infrastructure stack</li> <li>DC hosted: vendor supplies facilities. Unit of consumption is a server rack.</li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#infrastructure-as-a-service-iaas","title":"Infrastructure as a Service (IaaS)","text":"<ul> <li>Vendor supplies: facilities, infrastructure, servers, virtualization</li> <li>Unit of consumption: O/S</li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#why-use-iaas","title":"Why use IaaS?","text":"<ul> <li>Pay for usage of the virtual machine by amount of time</li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#platform-as-a-service-paas","title":"Platform as a Service (PaaS)","text":"<ul> <li>Vendor supplies: facilities, infrastructure, servers, virtualization, O/S, container</li> <li>Unit of consumption: runtime</li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#why-use-paas","title":"Why use PaaS?","text":"<ul> <li>if a person is a developer and doesn't want to worry about everything below the runtime</li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#software-as-a-service-saas","title":"Software as a Service (SaaS)","text":"<ul> <li>Vendor supplies: everything but the application</li> <li>Unit of consumption: application</li> </ul>"},{"location":"Cantrill/02-Cloud-Computing-Fundamentals/#others","title":"Others","text":"<ul> <li>Function as a Service</li> <li>Container as a Service</li> <li>Database as a Service</li> <li>many more</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/","title":"Tech Fundamentals","text":""},{"location":"Cantrill/03-Tech-Fundamentals/#networking-starter-pack","title":"Networking Starter Pack","text":""},{"location":"Cantrill/03-Tech-Fundamentals/#osi-7-layer-model","title":"OSI 7-Layer Model","text":"<p>https://en.wikipedia.org/wiki/OSI_model</p> <p>\ud83d\udca1 A layer 1 device only understands layer 1 whereas a layer 3 device understands layers 1, 2, and 3</p>"},{"location":"Cantrill/03-Tech-Fundamentals/#media-layers","title":"Media layers","text":"<ul> <li>Physical, data link, network</li> <li>Dealing with how data is moved between point A and point B</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#host-layers","title":"Host layers","text":"<ul> <li>Transport, session, presentation, application</li> <li>How data is chunked/grouped and reassembled as well as formatted so it can be understood</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#physical-layer-1","title":"Physical (layer 1)","text":""},{"location":"Cantrill/03-Tech-Fundamentals/#overview","title":"Overview","text":"<ul> <li>Transmission and reception of raw bit streams (zeros and ones) between a device and a shared physical medium</li> <li>Physical medium can be copper (electrical), fiber (light), or WIFI (radio frequency)</li> <li>Defines voltage levels, timing, rates, distances, modulation, and connectors</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#example-hubs","title":"Example: Hubs","text":"<ul> <li>Anything which a hub receives on any port is re-transmitted on all other ports, including errors and collisions</li> <li>At layer one, no individual device addresses</li> <li>If multiple devices transmit at once, a collision occurs and all information is useless</li> <li>No media access control. i.e. cannot control which devices are allowed to transmit</li> <li>Collisions are almost guaranteed - likelihood increases with # of devices</li> <li>layer 1 cannot detect when collisions occur</li> <li>layer 1 networks do not scale well</li> <li>no device to device communication</li> <li>layer 1 is only practical when layer 2 is added on top</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#data-link-layer-2","title":"Data link (layer 2)","text":"<ul> <li>requires layer 1 (OSI higher layers rely on all layers below itself)</li> <li>One of the most critical layers because it supports all data transfer</li> <li>Detects and mitigates data collisions</li> <li>Data link frame: format for sending information over a layer 2 network</li> <li>Layer 2 introduces MAC address: uniquely assigned to a piece of hardware<ul> <li>two parts: OUI (manufacturer) and network interface controller (NIC) specific</li> <li>MAC address should be globally unique</li> </ul> </li> <li>layer 2 networks can only communicate with other layer 2 networks that use the same protocol (e.g. ethernet)</li> <li>most common protocol for local networks is ethernet<ul> <li>long distance, point to point links use protocols like PPP/MPLS/ATM</li> </ul> </li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#frame","title":"Frame","text":"<ul> <li>Preamble: start of the frame</li> <li>MAC header<ul> <li>Destination MAC address</li> <li>Source MAC address: allows it to receive replies</li> <li>Ether type (ET): the layer 3 protocol is being used. Example: internet protocol (IP)</li> </ul> </li> <li>Payload<ul> <li>the data being sent via the layer 3 protocol</li> <li>46-1500 bytes</li> </ul> </li> <li>Frame check sequence (FCS)<ul> <li>Cyclic redundancy check (CRC)</li> <li>Allows destination to check for accidental data errors/changes/corruption</li> </ul> </li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#csmacd","title":"CSMA/CD","text":"<ul> <li>carrier sense multiple access (CSMA)<ul> <li>check for carrier -&gt; if no carrier, layer 1 takes the frame data and transmits</li> </ul> </li> <li>collision detection (CD)<ul> <li>if collision is detected, a jam signal is sent by all devices and a random backoff occurs. Then it retries. Process repeats, with increasing backoffs, if necessary.</li> </ul> </li> <li>encapsulation: wrapping data inside something else (e.g. wrapping data in a frame)</li> <li>Unicast communication: 1 to 1</li> <li>Broadcase communication: 1 to all</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#example-switches","title":"Example: Switches","text":"<ul> <li>Understands layer 2</li> <li>maintains a MAC address table and keeps track of addresses attached to which port</li> <li>if it receives a frame and knows which port the destination address belongs to, it will send it to that port only</li> <li>if it receives a frame and does not know which port the destination address belongs to, it will send it to all other ports</li> <li>switches store the frame, forward it, and then discard it</li> <li>switches do not forward collisions so each port is a separate collision domain which reduces collisions</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#network-layer-3","title":"Network (layer 3)","text":"<ul> <li>Internet protocol (IP) is a layer 3 protocol<ul> <li>add cross-network IP addressing and routing between LANs without direct P2P</li> </ul> </li> <li>routers are L3 devices that remove frame encapsulation and add new frame encapsulation at every hop</li> <li>packets can be delivered out of order -&gt; need layer 4 for this</li> <li>cannot handle different channels of communication -&gt; need layer 4 for this</li> <li>no flow control - if dest device is slower, packet loss occurs</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#l3-ip-packet-structure","title":"L3 IP packet structure","text":"<ul> <li>destination and source addresses don't have to be in the same LAN like with L2</li> <li>the frame changes for each LAN the frame is moving through<ul> <li>the packet doesn't change!</li> </ul> </li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#ipv4-packet","title":"IPv4 packet","text":"<p>packet fields (only a subset that is relevant right now)</p> <ul> <li>source and destination IP addresses</li> <li>data: from layer 4 protocol</li> <li>protocol: ICMP (1), TCP (6), UDP (17)</li> <li>Time to live (TTL): max number of hops the packet can take before being discarded</li> </ul> <p>IP addressing</p> <ul> <li>dotted decimal notation<ul> <li>e.g. 127.0.0.1</li> <li>4 decimals 0-255</li> <li>all IP addresses have a network and a host part<ul> <li>the prefix (e.g. /24, /16) determines which is the network part and which is the host part</li> </ul> </li> <li>two IP addresses are on the same IP network if the network part is the same</li> </ul> </li> <li>subnet mask determines if the IP address is local or remote<ul> <li>if remote, it needs to use the default gateway</li> </ul> </li> </ul> <p></p>"},{"location":"Cantrill/03-Tech-Fundamentals/#ipv6-packet","title":"IPv6 packet","text":"<p>packet fields (subset)</p> <ul> <li>source and destination IP addresses (bigger, more possible addresses)<ul> <li>more space taken in the packet</li> </ul> </li> <li>data: from layer 4 protocol</li> <li>Hop limit: max number of hops the packet can take before being discarded</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#route-tables-routes","title":"Route tables &amp; routes","text":"<ul> <li>routers have one to many route tables<ul> <li>a route table consists of a destination and the next hop/target to get there (e.g. the gateway to the network)</li> </ul> </li> <li>router chooses the most specific destination route<ul> <li>that means whichever matches and has the highest prefix number because there are fewer host IP addresses</li> </ul> </li> <li>route tables have a default route that matches if nothing else does</li> <li>border gateway protocol (BGP) allows routers to communicate to each other networks they know</li> <li>routers wrap packets in frames and forward at layer 2</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#address-resolution-protocol-arp","title":"Address resolution protocol (ARP)","text":"<ul> <li>convert IP to MAC</li> <li>needed because local network data is moved via L2 frames over L1</li> <li>broadcasts to other devices: who has x.x.x.x IP address? ARP on other device responds with MAC address</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#transport-layer-4","title":"Transport (layer 4)","text":"<p>Both are built in IP</p>"},{"location":"Cantrill/03-Tech-Fundamentals/#tcp","title":"TCP","text":"<ul> <li>slower</li> <li>reliable</li> <li>bi-directional</li> <li>Segments/TCP header<ul> <li>encapsulated within packets</li> <li>TCP header contents:<ul> <li>src port</li> <li>dest port</li> <li>sequence number (for ordering within a connection)</li> <li>acknowledgement (verify received up to a sequence number)</li> <li>flags 'n' things (close conn/sync/data offset)</li> <li>window (# of bytes between ack before sender stops and waits, used by receiving device as a form of flow control)</li> <li>checksum (detect errors)</li> <li>urgent pointer (set so TCP control traffic takes processing priority over other packets)</li> <li>options</li> <li>padding</li> </ul> </li> <li>segment also includes the data</li> </ul> </li> <li>uses random port on client, known port on server</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#tcp-handshake","title":"TCP Handshake","text":"<ul> <li>client sends SYN segment with start sequence (random #)</li> <li>server responds with SYN-ACK segment with server start sequence and sets acknowledge to client start sequence +1</li> <li>client sends ACK incrementing sequence header and acknowledgement header fields again</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#tcp-sessionsstate","title":"TCP Sessions/state","text":"<ul> <li>stateless firewall - doensn't understand state of connection<ul> <li>would need rule to allow outbound connection on port ? to ip/port ? and a rule to allow inbound connection from ip/port ? to port ?</li> <li>Example: AWS Network ACL</li> </ul> </li> <li>stateful firewall<ul> <li>sees outbound from port ? to ip/port ? and implicitly allows inbound</li> <li>Example: AWS Security Group</li> </ul> </li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#udp","title":"UDP","text":"<ul> <li>fast</li> <li>less-reliable</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#session-layer-5","title":"Session (layer 5)","text":""},{"location":"Cantrill/03-Tech-Fundamentals/#presentation-layer-6","title":"Presentation (layer 6)","text":""},{"location":"Cantrill/03-Tech-Fundamentals/#application-layer-7","title":"Application (layer 7)","text":""},{"location":"Cantrill/03-Tech-Fundamentals/#network-address-translation-nat","title":"Network Address Translation (NAT)","text":"<ul> <li>help with shortage of IPv4 addresses</li> <li>some security benefits</li> <li>translates private IPv4 to public</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#static-nat-aws-internet-gateway-igw","title":"Static NAT (AWS Internet Gateway IGW)","text":"<ul> <li>1 private to 1 (fixed) public address</li> <li>router (NAT device) maintains a NAT table</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#dynamic-nat","title":"Dynamic NAT","text":"<ul> <li>1 private to 1st available public</li> <li>used when have many private IPs and more than # of public IPs</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#port-address-translation-pat-aws-natgw","title":"Port address translation PAT (AWS NATGW)","text":"<ul> <li>many private to 1 public (AWS NATGW)</li> <li>most home networks</li> <li>uses source (private) IP and source port, public IP and public source port</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#ip-addressing-subnetting","title":"IP Addressing &amp; Subnetting","text":"<ul> <li>Class A<ul> <li>large networks</li> <li>0.0.0.0 - 127.255.255.255</li> <li>1.x.x.x - 127.x.x.x (16,777,216 IPs for each network)</li> </ul> </li> <li>Class B<ul> <li>medium size networks</li> <li>128.0.0.0 - 191.255.255.255</li> <li>128.0.x.x - 191.255.x.x (65,536 IPs for each network)</li> </ul> </li> <li>Class B<ul> <li>small networks</li> <li>192.0.0.0 - 223.255.255.255</li> <li>192.0.1.x - 223.255.255.x (256 IPs for each network)</li> </ul> </li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#private-ips","title":"Private IPs","text":"<ul> <li>RFC1918</li> <li>10.0.0.0 - 10.255.255.255 (1 Class A network)</li> <li>172.16.0.0 - 172.31.255.255 (16 Class B networks)</li> <li>192.168.0.0 - 192.168.255.255 (256 Class C networks)</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#ipv6","title":"IPv6","text":"<ul> <li>management isn't needed anymore since there are so many IP address</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#subnetting","title":"Subnetting","text":""},{"location":"Cantrill/03-Tech-Fundamentals/#ddos","title":"DDoS","text":"<ul> <li>Application layer (HTTP flood)</li> <li>Protocol attack (SYN flood)<ul> <li>server hangs trying to make handshake with an IP address that was spoofed</li> </ul> </li> <li>Volumetric (DNS amplification)<ul> <li>make large number of DNS requests where source address is IP address of legitimate website</li> <li>client devices need very little processing power for this type of attack</li> </ul> </li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#how-does-an-attacker-do-ths","title":"How does an attacker do ths?","text":"<ul> <li>Control a network of compromised devices (botnet)</li> <li>The botnet client devices make requests are cheap/fast but expensive/computationally intense for servers to handle</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#hashing","title":"Hashing","text":"<ul> <li>examples: MD5, SHA256<ul> <li>MD5 not recommended due to collisions (different data resulting in same hash)</li> </ul> </li> <li>turn data into fixed length representation</li> <li>hash function is an algorithm</li> <li>hash will be tiny regardless of size of data</li> <li>any change to data will change hash value</li> <li>one way only<ul> <li>no way to reverse engineer hash back to data other than brute force and comparing (not realistic with modern hash functions)</li> </ul> </li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#digital-signatures","title":"Digital Signatures","text":"<ul> <li>Verify integrity and authenticity</li> <li>sign with private key, verify with public key</li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#dns","title":"DNS","text":"<ul> <li>each domain has a zone file that links the name (e.g. <code>www</code> subdomain) to an IP address.</li> <li>Zonefile<ul> <li>HOW the DNS data is stored</li> <li>physical database for the zone</li> <li>is hosted by a name server (NS)</li> <li>could be located anywhere so DNS resolver needs to be able to locate it so DNS client can query it</li> </ul> </li> <li>DNS resolver<ul> <li>queries DNS so could be in DNS client, in router, or at ISP</li> <li>recursive resolver because it handles all the intermediate steps and returns result</li> </ul> </li> <li>Zone<ul> <li>WHAT the DNS data is</li> <li>part of the DNS database (e.g. amazon.com)</li> </ul> </li> </ul>"},{"location":"Cantrill/03-Tech-Fundamentals/#dns-root","title":"DNS root","text":"<ul> <li>upside down tree, reads domain right to left</li> <li>assumed period at the end (e.g. <code>.com</code> is actually <code>.com.</code>)</li> <li>13 DNS root servers, they don't manage the DNS database</li> <li>operating system has root hints file that points to DNS root servers</li> <li>root server accesses the root zone</li> <li>root zone is managed by IANA<ul> <li>IANA is in charge of DNS</li> <li>IANA is trusted because device is told to by root hints file</li> </ul> </li> <li>trusted = authority, authoritative</li> <li>IANA is authoritative for the root zone</li> <li>root zone delegates part to another zone and that other zone becomes authoritative for only the delegate portion</li> <li>root database/zone handles TLDs<ul> <li>generic/gTLD (e.g. <code>.com</code>, <code>.org</code>)</li> <li>country code/ccTLD (e.g. <code>.uk</code>)</li> <li>root zone delegates specific TLD to another zone</li> </ul> </li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/","title":"AWS Fundamentals","text":""},{"location":"Cantrill/04-AWS-Fundamentals/#public-vs-private","title":"Public vs private","text":"<ul> <li>AWS has three network zones<ul> <li>Public internet zone<ul> <li>used as transit to get to AWS public zone</li> </ul> </li> <li>Public zone<ul> <li>S3</li> </ul> </li> <li>Private zone<ul> <li>Private resources are within a VPC (virtual private cloud)<ul> <li>cannot communicate with other VPCs unless allowed</li> <li>cannot access internet or be accessed by internet unless allowed</li> </ul> </li> <li>Private IP ranges</li> <li>access public internet and public zone via internet gateway (IGW)</li> </ul> </li> </ul> </li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#global-infrastructure","title":"Global infrastructure","text":"<ul> <li>Most services are regional, some are global</li> <li>Service resilience<ul> <li>Globally resilient: data is replicated across multiple regions, cannot choose a region<ul> <li>e.g. IAM, cloudfront, Route 53</li> </ul> </li> <li>Region resilient: separate services in each region. Generally replicate to multiple AZs</li> <li>AZ resilient: if AZ fails (fire/power/hardware/etc), that service will fail</li> </ul> </li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#aws-regions","title":"AWS regions","text":"<ul> <li>Regions are geographically spread and based on customer requirements<ul> <li>Isolated fault domain for disaster recovery/failover</li> <li>Geopolitical separation - different governance for things like data movement</li> <li>Location control for performance</li> </ul> </li> <li>Region code (us-east-1) vs region name (North Virginia)</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#availability-zones","title":"Availability zones","text":"<ul> <li>every region has at least two AZs. Currently up to six</li> <li>Can create resiliency/high availability in case fire/power/hardware/etc impacts one AZ</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#aws-edge-locations","title":"AWS edge locations","text":"<ul> <li>More edge locations than regions</li> <li>Local distribution points for fast/efficient data transfer</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#vpcs","title":"VPCs","text":"<ul> <li>within 1 account and 1 region</li> <li>Two VPC types: default and custom<ul> <li>only 1 default VPC per region<ul> <li>Created by default by AWS, less flexible</li> </ul> </li> <li>many custom VPCs per region</li> </ul> </li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#default-vpc","title":"Default VPC","text":"<ul> <li>cannot cross boundary of VPC until configured otherwise</li> <li>only gets one CIDR range and it is always 172.31.0.0/16</li> <li>only one per region - can be removed and recreated</li> <li>pre-configured to have one /20 subnet in each AZ</li> <li>has a IGW, security group (SG) and NACL</li> <li>By default, anything created within default VPC has a public IPv4 address</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#elastic-compute-cloud-ec2-basics","title":"Elastic compute cloud (EC2) basics","text":"<ul> <li>IaaS - provides virtual machines (instances)</li> <li>private service by default using a single VPC</li> <li>AZ resilient (fails if AZ fails)</li> <li>different instance sizes/capabilities</li> <li>on-demand billing - per-second</li> <li>local on-host storage or Elastic Block Store (EBS)</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#lifecycle","title":"Lifecycle","text":"<ul> <li>Running &lt;-&gt; Stopped</li> <li>Terminated (non-reversible)</li> </ul> <ul> <li>When running, charged for: CPU, memory, storage, and networking</li> <li>When stopped, charged for: storage</li> <li>When terminated, not charged</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#ami-amazon-machine-image","title":"AMI (Amazon Machine Image)","text":"<ul> <li>permissions<ul> <li>public - everyone allowed to use (like default Linux/Windows AMIs)</li> <li>owner - implicit allow</li> <li>explicit - specific AWS accounts</li> </ul> </li> <li>boot volume</li> <li>data volumes</li> <li>block device volume</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#connecting-to-ec2","title":"Connecting to EC2","text":"<ul> <li>Windows: Port 3389 (RDP)</li> <li>Linux: Port 22 (SSH)</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#s3","title":"S3","text":"<ul> <li>global object storage platform, but regional based/resilient<ul> <li>replicated across AZs</li> <li>can be replicated across regions</li> </ul> </li> <li>public service, unlimited data, multi-user</li> <li>great for large amounts of data</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#s3-objects","title":"S3 objects","text":"<ul> <li>most of the time, an object is a file</li> <li>objects have:<ul> <li>\ud83d\udcdd key (i.e. filename)</li> <li>\ud83d\udcdd value (i.e. content being stored)</li> <li>\ud83d\udcdd size: can be 0 bytes to 5TB</li> <li>version id</li> <li>metadata</li> <li>access control</li> <li>sub-resources</li> </ul> </li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#s3-buckets","title":"S3 buckets","text":"<ul> <li>data inside a bucket has a primary region<ul> <li>data doesn't leave a region unless configured to (data sovereignty)</li> </ul> </li> <li>\ud83d\udcdd bucket name must be globally unique<ul> <li>between 3-63 characters, lowercase, no underscores</li> <li>start with lowercase letter or number</li> <li>can't be IP formatted</li> </ul> </li> <li>\ud83d\udcdd can hold unlimited number of objects</li> <li>flat structure, not like a filesystem with folders<ul> <li>object key prefixes make it seem otherwise</li> </ul> </li> <li>\ud83d\udcdd 100 buckets per account soft limit, 1000 per account hard limit</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#patterns-and-anti-patterns","title":"Patterns and anti-patterns","text":"<ul> <li>S3 is an object store, not file (like windows) or block (like mount/volume on linux)</li> <li>great for data 'offload'</li> <li>input and/or output to many aws services</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#cloudformation","title":"CloudFormation","text":"<ul> <li>Can be YAML or JSON</li> <li>All templates must have at least one resource. <code>Resources</code> is only mandatory field in a template</li> <li>\ud83d\udcdd <code>Description</code> must immediately follow <code>AWSTemplateFormatVersion</code> if <code>AWSTemplateFormatVersion</code> is included (<code>AWSTemplateFormatVersion</code> is an optional field)</li> <li><code>Mappings</code>: can create lookup tables, e.g. custom settings for different environments</li> <li><code>Conditions</code>: define boolean expressions that can be associated with resources to determine when to create the resource</li> <li><code>Resource</code> -&gt; <code>Instance</code>: Logical resource, <code>Type</code> determines type of instance</li> <li>Stack: implementation of a CloudFormation template</li> <li>each logical resource is used to create a physical resource</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#cloudwatch","title":"CloudWatch","text":"<ul> <li>collects and manages operational data</li> </ul> <p>Three main products:</p> <ul> <li>Metrics: monitoring of metrics and events based on metrics - from AWS, other cloud platforms, on-prem, etc</li> </ul> <ul> <li>Cloudwatch logs: from AWS products, apps, on-premises</li> </ul> <ul> <li>Cloudwatch events: from AWS services and schedules</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#basics","title":"Basics","text":"<ul> <li>Namespace: container for data</li> <li>AWS namespaces look like AWS/{service}</li> <li>Datapoint: timestamp and value</li> <li>Dimension: name:value pairs for different things or perspectives within the same metric</li> <li>Alarm<ul> <li>associated with a metric</li> <li>Has bounds that determine when to be in OK or ALARM state</li> <li>Can take an action when in alarm state</li> </ul> </li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#shared-responsibility-model","title":"Shared Responsibility Model","text":"<ul> <li>Customer is responsible for security \"in\" the cloud</li> <li>AWS is responsible for security \"of\" the cloud</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#high-availability-fault-tolerance-disaster-recovery","title":"High-availability, fault-tolerance, disaster recovery","text":""},{"location":"Cantrill/04-AWS-Fundamentals/#high-availability","title":"High-availability","text":"<ul> <li>ensure agreed upon performance, usually uptime, for a higher than normal period</li> <li>99.9% (three 9's) = 8.77 hrs/yr downtime</li> <li>99.999% (five 9's) = 5.26 mins/yr downtime</li> <li>\ud83d\udcdd minimize any outages</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#fault-tolerance","title":"Fault-tolerance","text":"<ul> <li>property that enables system to continue operating during one or more faults/failures in some components</li> <li>\ud83d\udcdd operate through faults</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#disaster-recovery","title":"Disaster recovery","text":"<ul> <li>policies, tools, procedures to enable recovery or continuation of vital infrastructure following natural/human-induced disaster</li> <li>\ud83d\udcdd used when HA and FT don't work</li> </ul>"},{"location":"Cantrill/04-AWS-Fundamentals/#route53","title":"Route53","text":"<ul> <li>register domains through all major registries</li> <li>creates and manages nameservers</li> <li> <p>hosted zones: zone files in AWS, hosted on four managed name servers</p> <ul> <li>can be public or private (linked to VPCs)</li> </ul> </li> </ul> <ul> <li>Nameserver (NS): delegation of DNS</li> <li>A and AAAA: host to IPv4 or IPv6, respectively</li> <li>CNAME: host to host<ul> <li>reduces admin overhead. e.g. designate www, email, and ftp subdomains to A record so if IPv4 changes, only A record has to be updated</li> </ul> </li> <li>MX: email record<ul> <li>email server looks at domain of TO address and queries MX record</li> <li>lowest value has highest priority, iterates over records until successful</li> </ul> </li> <li>TXT: prove ownership of domain</li> <li>TTL: cache records for specified number of seconds<ul> <li>lengthy process to get result from authoritative source (nameserver)</li> </ul> </li> </ul>"},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/","title":"IAM, Accounts and AWS Organizations","text":""},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/#iam-identity-policies","title":"IAM identity policies","text":""},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/#iam-policy-document","title":"IAM policy document","text":"<ul> <li>1+ statements</li> <li>allow or deny</li> <li>if no explicit allow, then implicitly denied</li> <li>rule precedence<ul> <li>explicit denies -&gt; explicit allows -&gt; implicitly denied</li> <li>i.e. deny -&gt; allow -&gt; deny</li> </ul> </li> </ul>"},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/#managed-iam-policies","title":"Managed IAM policies","text":"<ul> <li>best practice because reusable</li> <li>two types: AWS defined and customer defined</li> <li>normal, default \"business\" rights</li> <li>low management overhead</li> <li>use inline policies for exceptions</li> </ul>"},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/#iam-users","title":"IAM users","text":"<ul> <li>\ud83d\udcdd identity used for long-term access to AWS account<ul> <li>\ud83d\udcdd used 99% of the time for named, tangible things that need access</li> <li>\ud83d\udcdd could be humans, applications, service accounts</li> </ul> </li> <li>authenticates via one of two ways: username and password (human) or access keys (app/service account)</li> </ul>"},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/#arns","title":"ARNs","text":"<ul> <li>syntax:<ul> <li><code>arn:partition:service:region:account-id:resource-id</code></li> <li><code>arn:partition:service:region:account-id:resource-type/resource-id</code></li> <li><code>arn:partition:service:region:account-id:resource-type:resource-id</code></li> </ul> </li> <li>partition is almost always <code>aws</code> except beijing/china is <code>aws-cn</code></li> <li>sometimes region/account-id can be omitted<ul> <li><code>arn:aws:s3:::catgifs</code> - no region or account id needed because S3 buckets are globally unique</li> </ul> </li> <li>\u2757 common gotchas with ARNs<ul> <li><code>arn:aws:s3:::catgifs</code> is very different from <code>arn:aws:s3:::catgifs/*</code></li> <li><code>arn:aws:s3:::catgifs</code> grants access to bucket and operations on bucket</li> <li><code>arn:aws:s3:::catgifs/*</code> grants access to objects in bucket and operations on those objects</li> <li>these two do not overlap</li> </ul> </li> </ul>"},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/#iam-exam-tips","title":"IAM exam tips","text":"<ul> <li>\ud83d\udcdd 5,000 IAM users per account</li> <li>\ud83d\udcdd IAM user can be member of max 10 groups</li> <li>can be a system design limit<ul> <li>\ud83d\udcdd alternatives: IAM roles and identity federation</li> </ul> </li> </ul>"},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/#iam-groups","title":"IAM groups","text":"<ul> <li>containers for IAM users - used for organization and to ease management<ul> <li>\ud83d\udcdd cannot login to a group</li> </ul> </li> <li>\ud83d\udcdd could have all 5,000 IAM users in an account in one IAM group</li> <li>\ud83d\udcdd no \"all users\" IAM group</li> <li>\ud83d\udcdd cannot nest IAM groups, groups within groups</li> <li>soft limit of 300 groups per account, can be increased by support</li> <li>\ud83d\udcdd groups are not a true identity, cannot be referred to as a Principal or from an IAM policy</li> </ul>"},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/#iam-roles","title":"IAM roles","text":"<ul> <li>identity used by multiple (or unknown number of) principals</li> <li>roles are assumed when logging in, you become that role for a short period of time</li> <li>can have two types of policies:<ul> <li>trust policy: controls which identities can assume the role<ul> <li>can reference identities in same account, other accounts, anonymous access, or other types using OIDC (Facebook, Google, etc)</li> </ul> </li> <li>permissions policy: access policy specific to the role. policy is checked every time credentials are used so changes to permissions policy are immediate.</li> </ul> </li> <li>if trust policy allows access, identity receives temporary security credentials</li> </ul>"},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/#when-to-use-iam-roles","title":"When to use IAM roles","text":"<ul> <li>execution roles: avoids needing to hardcode credentials in code (e.g. Lambda execution role)</li> <li>emergency roles: temporary, elevated access that is recorded/logged when used. \"break glass\" role</li> <li>existing identities (ID federation): AD/SSO or &gt; 5000 identities</li> </ul>"},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/#service-linked-roles-and-passrole","title":"Service linked roles and PassRole","text":"<ul> <li>linked to specific AWS service</li> <li>predefined by service, service may create/delete role</li> <li>provides permissions a service needs to interact with other AWS services</li> <li>\u2757 can't delete role until no longer required (distinction from IAM role)</li> <li>PassRole: permission to provision service to use an existing service linked role</li> </ul>"},{"location":"Cantrill/05-IAM-Accounts-AWS-Organizations/#aws-organizations","title":"AWS Organizations","text":"<ul> <li>Have one organization main/master/management/payer account and zero to many member accounts</li> <li>Consolidated billing means one bill for all AWS accounts</li> <li>Consolidates reservations and volume discounts</li> <li>Best practice: use IAM roles, store all identities in a single identity account or use federation with that one identity account</li> </ul>"},{"location":"Cantrill/06-Simple-Storage-Service-S3/","title":"Simple Storage Service (S3)","text":""},{"location":"Cantrill/06-Simple-Storage-Service-S3/#s3-security","title":"S3 Security","text":"<ul> <li>private by default</li> <li>only root user of account has access by default</li> </ul>"},{"location":"Cantrill/06-Simple-Storage-Service-S3/#s3-bucket-policies","title":"S3 bucket policies","text":"<ul> <li>form of resource policy</li> <li>like identity policies, but inverse<ul> <li>identity policies cannot grant an identity from another account any access</li> </ul> </li> <li>resource policies are attached to resources and can allow/deny access from same or different aws accounts</li> <li>resource policies can allow/deny anonymous principles</li> <li><code>Principal</code>: which identities (who) the policy applies to</li> <li>explicit deny takes precedence over allow</li> <li>block public access - no matter what the policy says, these settings apply to public access (anonymous principals)</li> </ul>"},{"location":"Cantrill/06-Simple-Storage-Service-S3/#acls-on-objects-and-bucket","title":"ACLs on objects and bucket","text":"<ul> <li>subresource</li> <li>legacy (not recommended)</li> <li>very limited flexibility / customization of access</li> </ul>"},{"location":"Cantrill/06-Simple-Storage-Service-S3/#identity-vs-resource-policies","title":"\ud83d\udcdd Identity vs Resource policies","text":"<ul> <li>Choose Identity when:<ul> <li>controlling multiple resources (easier and not all resource types support resource policies)</li> <li>you prefer using IAM</li> <li>same account access</li> </ul> </li> <li>Resource policy (bucket policy)<ul> <li>just controlling s3 access</li> <li>anonymous or cross-account</li> </ul> </li> </ul>"},{"location":"Cantrill/06-Simple-Storage-Service-S3/#static-website-hosting","title":"Static website hosting","text":"<ul> <li>allows access via HTTP (blogs)</li> <li>index and error documents are set</li> <li>good for: offloading static images/media from a dynamic page</li> <li>out of band pages: host maintenance, status, error, fallback pages to provide a better customer experience if EC2 server was offline</li> </ul>"},{"location":"Cantrill/06-Simple-Storage-Service-S3/#object-versioning","title":"Object versioning","text":"<ul> <li>controlled at bucket level</li> <li>\ud83d\udcdd cannot be disabled once enabled<ul> <li>can be suspended but that doesn't delete anything</li> </ul> </li> <li>without versioning, objects are replaced if an object with the same key (name) is uploaded</li> <li>with versioning, operations which would modify objects instead generate a new version</li> <li>previous objects can be retrieved from s3 - defaults to latest/current object though</li> <li>deletion by default results in aws creating a delete marker - can be undone</li> <li>version delete: specify version id when deleting an object (deletes permanently)</li> </ul>"},{"location":"Cantrill/06-Simple-Storage-Service-S3/#mfa-delete","title":"MFA Delete","text":"<ul> <li>Enabled in versioning configuration</li> <li>MFA is required to change bucket versioning state and to delete versions<ul> <li>API call requires serial id of MFA and code</li> </ul> </li> </ul>"},{"location":"Cantrill/07-Virtual-Private-Cloud-VPC-Basics/","title":"Virtual Private Cloud (VPC) Basics","text":""}]}